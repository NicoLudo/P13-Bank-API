swagger: "2.0"
info:
  title: "Bank Argent API Documentation"
  description: "Comprehensive API documentation for Bank Argent."
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:3001"
basePath: "/api/v1"
schemes:
  - "http"
paths:
  /user/login:
    post:
      tags:
        - "User Module"
      summary: "Login"
      description: "Authenticate user and retrieve a token."
      parameters:
        - $ref: "#/parameters/LoginPayload"
      responses:
        '200':
          description: "Login successful."
          schema:
            $ref: "#/definitions/LoginResponse"
        '400':
          description: "Invalid fields."
        '500':
          description: "Internal server error."

  /user/signup:
    post:
      tags:
        - "User Module"
      summary: "Signup"
      description: "Register a new user."
      parameters:
        - $ref: "#/parameters/SignupPayload"
      responses:
        '200':
          description: "Signup successful."
          schema:
            $ref: "#/definitions/ApiResponse"
        '400':
          description: "Invalid fields."
        '500':
          description: "Internal server error."

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - "User Module"
      summary: "Get User Profile"
      description: "Fetch details of the logged-in user's profile."
      parameters:
        - $ref: "#/parameters/AuthHeader"
      responses:
        '200':
          description: "Profile fetched successfully."
          schema:
            $ref: "#/definitions/ApiResponse"
        '400':
          description: "Invalid fields."
        '500':
          description: "Internal server error."

    put:
      security:
        - Bearer: []
      tags:
        - "User Module"
      summary: "Update User Profile"
      description: "Update details of the logged-in user's profile."
      parameters:
        - $ref: "#/parameters/AuthHeader"
        - $ref: "#/parameters/UserProfilePayload"
      responses:
        '200':
          description: "Profile updated successfully."
          schema:
            $ref: "#/definitions/ApiResponse"
        '400':
          description: "Invalid fields."
        '500':
          description: "Internal server error."

  /user/profile/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - "Transaction Module"
      summary: "Get Transactions"
      description: "Fetch the user's transaction history."
      parameters:
        - $ref: "#/parameters/AuthHeader"
      responses:
        '200':
          description: "Transactions fetched successfully."
          schema:
            $ref: "#/definitions/ApiResponseTransactions"
        '400':
          description: "Invalid fields."
        '500':
          description: "Internal server error."
        '503':
          description: "Service unavailable."

  /user/profile/transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - "Transaction Module"
      summary: "Get Transaction Details"
      description: "Fetch details of a specific transaction."
      parameters:
        - $ref: "#/parameters/AuthHeader"
        - $ref: "#/parameters/TransactionId"
      responses:
        '200':
          description: "Transaction details fetched successfully."
          schema:
            $ref: "#/definitions/ApiResponseSingleTransaction"
        '400':
          description: "Invalid fields."
        '404':
          description: "Transaction not found."
        '500':
          description: "Internal server error."
        '503':
          description: "Service unavailable."

    put:
      security:
        - Bearer: []
      tags:
        - "Transaction Module"
      summary: "Update Transaction"
      description: "Update the details of a specific transaction."
      parameters:
        - $ref: "#/parameters/AuthHeader"
        - $ref: "#/parameters/TransactionId"
        - $ref: "#/parameters/TransactionPayload"
      responses:
        '200':
          description: "Transaction updated successfully."
          schema:
            $ref: "#/definitions/ApiResponse"
        '400':
          description: "Invalid fields."
        '403':
          description: "Unauthorized."
        '404':
          description: "Transaction not found."
        '500':
          description: "Internal server error."

parameters:
  AuthHeader:
    in: header
    name: Authorization
    type: string
    description: "Attach Bearer JWT token."
    required: true

  LoginPayload:
    in: body
    name: body
    description: "Payload for login."
    required: true
    schema:
      $ref: "#/definitions/Login"

  SignupPayload:
    in: body
    name: body
    description: "Payload for user signup."
    required: true
    schema:
      $ref: "#/definitions/User"

  UserProfilePayload:
    in: body
    name: body
    description: "Payload to update user profile."
    required: true
    schema:
      $ref: "#/definitions/UserProfile"

  TransactionId:
    in: path
    name: id
    type: string
    description: "Transaction ID."
    required: true

  TransactionPayload:
    in: body
    name: body
    description: "Payload to update transaction."
    required: true
    schema:
      $ref: "#/definitions/UserSingleTransaction"

definitions:
  Login:
    type: object
    properties:
      email:
        type: string
        description: "User email."
      password:
        type: string
        description: "User password."

  User:
    type: object
    properties:
      email:
        type: string
        description: "User email."
      password:
        type: string
        description: "User password."
      firstName:
        type: string
        description: "User first name."
      lastName:
        type: string
        description: "User last name."

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
        description: "First name."
      lastName:
        type: string
        description: "Last name."

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string

  ApiResponseTransactions:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      transactions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: "Transaction ID."
            transactionType:
              type: string
              description: "Type of transaction."
            amount:
              type: number
              description: "Transaction amount."
            timestamp:
              type: string
              format: date-time
              description: "Timestamp of the transaction."

  ApiResponseSingleTransaction:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      transaction:
        type: object
        properties:
          id:
            type: string
            description: "Transaction ID."
          transactionType:
            type: string
            description: "Type of transaction."
          category:
            type: string
            description: "Transaction category."
          notes:
            type: string
            description: "Additional notes about the transaction."
          amount:
            type: number
            description: "Transaction amount."
          timestamp:
            type: string
            format: date-time
            description: "Timestamp of the transaction."

  UserSingleTransaction:
    type: object
    properties:
      notes:
        type: string
        description: "Additional notes about the transaction."

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
